stages:
  - build
  - test
  - deploy

build-job:
  stage: build
  script:
    - docker build -t my-backend-image .

backend-test-job:
  stage: test
  script:
    - echo "Testing"
    - echo "PRODUCTION = $PRODUCTION"
    - echo "ALLOWED_ORIGINS = $ALLOWED_ORIGINS"
    - echo "PRODUCTION_DB_URL = $PRODUCTION_DB_URL"
    - docker run --rm -e PRODUCTION="$PRODUCTION" -e ALLOWED_ORIGINS="$ALLOWED_ORIGINS" -e PRODUCTION_DB_URL="$PRODUCTION_DB_URL" my-backend-image pytest -s -v

nginx-test-job:
  stage: test
  script:
    # Verify that the configuration file exists
    - ls -l ./nginx.conf
    - cat ./nginx.conf

    # Run a temporary Nginx container and validate the configuration
    - docker run --rm -v "$(pwd)/nginx.conf:/custom/nginx.conf:ro" nginx:latest nginx -t -c /custom/nginx.conf

deploy-job:
  stage: deploy
  script:
    - docker compose down --remove-orphans
    - docker compose up -d --force-recreate
